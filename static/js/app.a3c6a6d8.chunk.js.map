{"version":3,"sources":["assets/privacy.md","src/PreferencesContext.js","src/Header.js","src/EnumActivityPeriod.js","src/utils/utils.js","src/ActivityList.js","src/components/ErrorBoundary.js","src/analytics/ActivityPie.js","src/HighLevelAssessment.js","src/utils/UrlUtility.js","src/Footer.js","src/Home.js","src/PrivacyPolicy.js","src/Theme.js","App.js"],"names":["module","exports","PreferencesContext","React","createContext","toggleTheme","inThemeDark","Header","navigation","route","options","back","theme","useTheme","useContext","isThemeDark","Appbar","colors","primary","surface","BackAction","onPress","goBack","Content","title","getHeaderTitle","name","TouchableRipple","Switch","color","value","ActivityPeriods","Object","freeze","DAY","text","multiplier","WORK_DAY","WEEK_END","WEEK","MONTH","randomColor","Math","random","toString","slice","ActivityList","props","activities","setActivities","styles","StyleSheet","create","row","flexDirection","width","paddingHorizontal","paddingTop","paddingBottom","marginHorizontal","marginVertical","backgroundColor","borderRadius","roundness","flexWrap","activityName","flexGrow","activityDetails","flex","height","alignItems","minWidth","activityHours","activityPeriodButton","background","borderWidth","borderColor","disabled","activityPeriodDropdownText","textAlign","fontFamily","fonts","regular","fontWeight","fontSize","activityPeriodDropdown","maxHeight","activityPeriodRow","paddingVertical","addActivityButton","deleteActivityButton","position","margin","top","right","alignSelf","View","style","map","activity","index","TextInput","label","onChangeText","activityIndex","activityNewName","ReactGA","event","category","action","dimension1","dimension2","duration","metric1","hours","metric2","mode","dense","timeVal","activityNewHours","parseFloat","round","Affix","data","values","onSelect","selectedPeriod","unitIdx","activityNewPeriod","buttonTextAfterSelection","rowTextForSelection","defaultValue","buttonStyle","buttonTextStyle","dropdownStyle","rowStyle","rowTextStyle","IconButton","icon","size","Button","length","ErrorBoundary","state","hasError","error","errorInfo","console","warn","this","children","Component","ActivityPie","totalHoursInWeek","useState","setData","useEffect","freeHours","pieData","filter","hoursInWeek","key","svg","fill","log","push","stroke","placeholder","strokeWidth","arc","outerRadius","innerRadius","cornerRadius","constructDataFromActivities","pieChart","sort","a","b","maxWidth","aspectRatio","HighLevelAssessment","hoursRemaining","setHoursRemaining","totalOccupiedHours","calculateRemainingTime","totalFreeHoursText","Caption","Headline","activityPie","justifyContent","openURL","url","useCallback","async","Linking","canOpenURL","Alert","alert","Footer","useNavigation","footer","borderTopWidth","marginTop","copyright","Text","Date","getFullYear","uppercase","compact","navigate","responsiveStyles","query","freeTimeWidget","activityListStyle","highLevelAssessmentStyle","minHeight","marginBottom","commonStyles","container","content","description","Home","send","merge","useStylesheet","ScrollView","Paragraph","StatusBar","PrivacyPolicy","privacyPolicyText","setPrivacyPolicyText","privacyPolicyContents","fetch","privacyPolicyFile","then","res","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","DefaultTheme","accent","DarkTheme","Stack","createNativeStackNavigator","App","initialize","setIsThemeDark","preferences","useMemo","Provider","NavigationContainer","Helmet","src","crossorigin","Navigator","initialRouteName","screenOptions","header","Screen","component"],"mappings":"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","file":"static/js/app.a3c6a6d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/privacy.2a8a9f9e.md\";","import React from 'react';\r\nexport const PreferencesContext = React.createContext({\r\n    toggleTheme: () => { },\r\n    inThemeDark: false,\r\n});","import React from 'react';\r\nimport { useTheme, Appbar, TouchableRipple, Switch } from 'react-native-paper';\r\nimport { PreferencesContext } from './PreferencesContext';\r\nimport { getHeaderTitle } from '@react-navigation/elements'\r\n\r\nexport const Header = ({ navigation, route, options, back }) => {\r\n    const theme = useTheme();\r\n    const { toggleTheme, isThemeDark } = React.useContext(PreferencesContext);\r\n\r\n    return (\r\n        <Appbar.Header\r\n            theme={{\r\n                colors: {\r\n                    primary: theme?.colors.surface,\r\n                },\r\n            }}\r\n        >\r\n            {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\r\n            <Appbar.Content title={getHeaderTitle(options, route.name)} />\r\n            <TouchableRipple onPress={() => toggleTheme()}>\r\n                <Switch\r\n                    color={theme.colors.primary}\r\n                    value={isThemeDark}\r\n                />\r\n            </TouchableRipple>\r\n        </Appbar.Header>\r\n    );\r\n};","export const ActivityPeriods = Object.freeze({\r\n    DAY: {\r\n        text: \"per day\",\r\n        multiplier: 7,\r\n    },\r\n    WORK_DAY: {\r\n        text: \"per workday\",\r\n        multiplier: 5,\r\n    },\r\n    WEEK_END: {\r\n        text: \"per holiday\",\r\n        multiplier: 2,\r\n    },\r\n    WEEK: {\r\n        text: \"per week\",\r\n        multiplier: 1,\r\n    },\r\n    MONTH: {\r\n        text: \"per month\",\r\n        multiplier: 7 * 12 / 365,\r\n    },\r\n})","export const randomColor = () =>\r\n    ('#' + ((Math.random() * 0xffffff) << 0).toString(16) + '000000').slice(0, 7)\r\n","import React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { Button, IconButton, TextInput, useTheme } from 'react-native-paper';\r\nimport SelectDropdown from 'react-native-select-dropdown';\r\nimport ReactGA from 'react-ga4';\r\nimport { ActivityPeriods } from './EnumActivityPeriod';\r\nimport { randomColor } from './utils/utils';\r\n\r\nexport const ActivityList = (props) => {\r\n    const { activities, setActivities } = props;\r\n\r\n    // styles\r\n    const theme = useTheme();\r\n    const styles = StyleSheet.create({\r\n        row: {\r\n            flexDirection: 'row',\r\n            width: '96%',\r\n            paddingHorizontal: '5px',\r\n            paddingTop: '5px',\r\n            paddingBottom: '10px',\r\n            marginHorizontal: '2%',\r\n            marginVertical: '5px',\r\n            backgroundColor: theme.colors.surface,\r\n            borderRadius: theme.roundness,\r\n            flexWrap: 'wrap'\r\n        },\r\n        activityName: {\r\n            flexGrow: 1,\r\n            marginHorizontal: '5px'\r\n        },\r\n        activityDetails: {\r\n            flex: 1,\r\n            flexDirection: 'row',\r\n            flexWrap: 'nowrap',\r\n            height: 'auto',\r\n            alignItems: 'flex-end',\r\n            minWidth: 256,\r\n        },\r\n        activityHours: {\r\n            flex: 1,\r\n            minWidth: 108,\r\n            marginHorizontal: '5px',\r\n        },\r\n        activityPeriodButton: {\r\n            flex: 1,\r\n            minWidth: 128,\r\n            height: '90%',\r\n            marginHorizontal: '5px',\r\n            backgroundColor: theme.colors.background,\r\n            borderWidth: '1px',\r\n            borderRadius: theme.roundness,\r\n            borderColor: theme.colors.disabled,\r\n        },\r\n        activityPeriodDropdownText: {\r\n            color: theme.colors.text,\r\n            textAlign: 'left',\r\n            fontFamily: theme.fonts.regular.fontFamily,\r\n            fontWeight: theme.fonts.regular.fontWeight,\r\n            fontSize: '16px'\r\n        },\r\n        activityPeriodDropdown: {\r\n            backgroundColor: theme.colors.surface,\r\n            height: 'auto',\r\n            maxHeight: '197px',\r\n            borderRadius: theme.roundness\r\n        },\r\n        activityPeriodRow: {\r\n            paddingVertical: '10px',\r\n            backgroundColor: theme.colors.background\r\n        },\r\n        addActivityButton: {\r\n            width: '96%',\r\n            paddingHorizontal: '5px',\r\n            paddingVertical: '5px',\r\n            marginHorizontal: '2%',\r\n            marginVertical: '5px'\r\n        },\r\n        deleteActivityButton: {\r\n            position: 'absolute',\r\n            margin: 0,\r\n            top: -8,\r\n            right: -8,\r\n            alignSelf: 'flex-start',\r\n            height: 'auto',\r\n            width: 'auto',\r\n            borderRadius: 8\r\n        },\r\n    })\r\n\r\n    const changeNameOfActivity = (activityIndex, activityNewName) => {\r\n        ReactGA.event({\r\n            category: \"ActivityList\",\r\n            action: \"Changed Name\",\r\n            value: activityIndex,\r\n            dimension1: activityNewName,\r\n            dimension2: activities[activityIndex].duration.text,\r\n            metric1: activities[activityIndex].hours,\r\n            metric2: activities[activityIndex].duration.multiplier,\r\n        });\r\n        setActivities([\r\n            ...activities.slice(0, activityIndex),\r\n            {\r\n                ...activities[activityIndex],\r\n                name: activityNewName,\r\n            },\r\n            ...activities.slice(activityIndex + 1)]);\r\n    }\r\n\r\n    const changeHoursOfActivity = (activityIndex, activityNewHours) => {\r\n        ReactGA.event({\r\n            category: \"ActivityList\",\r\n            action: \"Changed Hours\",\r\n            value: activityIndex,\r\n            dimension1: activities[activityIndex].name,\r\n            dimension2: activities[activityIndex].duration.text,\r\n            metric1: activityNewHours,\r\n            metric2: activities[activityIndex].duration.multiplier,\r\n        });\r\n        if (activityNewHours == \"\") {\r\n            activityNewHours = 0;\r\n        }\r\n        else {\r\n            activityNewHours = parseFloat(activityNewHours)\r\n            activityNewHours = Math.round(activityNewHours * 100) / 100\r\n        }\r\n        setActivities([\r\n            ...activities.slice(0, activityIndex),\r\n            {\r\n                ...activities[activityIndex],\r\n                hours: activityNewHours,\r\n            },\r\n            ...activities.slice(activityIndex + 1)]);\r\n    }\r\n\r\n    const changePeriodOfActivity = (activityIndex, activityNewPeriod) => {\r\n        ReactGA.event({\r\n            category: \"ActivityList\",\r\n            action: \"Changed Duration\",\r\n            value: activityIndex,\r\n            dimension1: activities[activityIndex].name,\r\n            dimension2: activityNewPeriod.text,\r\n            metric1: activities[activityIndex].hours,\r\n            metric2: activityNewPeriod.multiplier,\r\n        });\r\n        setActivities([\r\n            ...activities.slice(0, activityIndex),\r\n            {\r\n                ...activities[activityIndex],\r\n                duration: activityNewPeriod\r\n            },\r\n            ...activities.slice(activityIndex + 1)]);\r\n    }\r\n\r\n    const addActivity = () => {\r\n        ReactGA.event({\r\n            category: \"ActivityList\",\r\n            action: \"Added Activity\",\r\n            value: activities.length,\r\n        });\r\n        setActivities([\r\n            ...activities,\r\n            {\r\n                name: '',\r\n                hours: 0,\r\n                duration: ActivityPeriods.WEEK,\r\n                color: randomColor(),\r\n            }\r\n        ]);\r\n    }\r\n\r\n    const deleteActivity = (activityIndex) => {\r\n        ReactGA.event({\r\n            category: \"ActivityList\",\r\n            action: \"Deleted Activity\",\r\n            value: activityIndex,\r\n            dimension1: activities[activityIndex].name,\r\n            dimension2: activities[activityIndex].duration.text,\r\n            metric1: activities[activityIndex].hours,\r\n            metric2: activities[activityIndex].duration.multiplier,\r\n        });\r\n        setActivities([\r\n            ...activities.slice(0, activityIndex),\r\n            ...activities.slice(activityIndex + 1)]);\r\n    }\r\n\r\n    return (\r\n        <View style={props.style}>\r\n            {activities.map((activity, index) => (\r\n                <View style={styles.row} key={index}>\r\n                    <TextInput\r\n                        label=\"Activity\"\r\n                        value={activity.name}\r\n                        onChangeText={activityName => changeNameOfActivity(index, activityName)}\r\n                        style={styles.activityName}\r\n                        mode=\"outlined\"\r\n                        dense\r\n                    />\r\n                    <View style={styles.activityDetails}>\r\n                        <TextInput\r\n                            label={\"Time\"}\r\n                            value={activity.hours.toString()}\r\n                            onChangeText={timeVal => changeHoursOfActivity(index, timeVal)}\r\n                            style={styles.activityHours}\r\n                            right={<TextInput.Affix text='Hours' />}\r\n                            mode=\"outlined\"\r\n                            dense\r\n                        />\r\n                        <SelectDropdown\r\n                            data={Object.values(ActivityPeriods)}\r\n                            onSelect={(selectedPeriod, unitIdx) => {\r\n                                changePeriodOfActivity(index, selectedPeriod)\r\n                            }}\r\n                            buttonTextAfterSelection={(selectedPeriod, unitIdx) => selectedPeriod.text}\r\n                            rowTextForSelection={(selectedPeriod, unitIdx) => selectedPeriod.text}\r\n                            defaultValue={activity.duration}\r\n                            buttonStyle={styles.activityPeriodButton}\r\n                            buttonTextStyle={styles.activityPeriodDropdownText}\r\n                            dropdownStyle={styles.activityPeriodDropdown}\r\n                            rowStyle={styles.activityPeriodRow}\r\n                            rowTextStyle={styles.activityPeriodDropdownText}\r\n                        />\r\n                    </View>\r\n                    <IconButton\r\n                        icon='close-circle'\r\n                        size={16}\r\n                        onPress={() => deleteActivity(index)}\r\n                        color={theme.colors.primary}\r\n                        style={styles.deleteActivityButton}\r\n                    />\r\n                </View>\r\n            ))}\r\n            <Button icon='plus' mode='contained' style={styles.addActivityButton} onPress={addActivity}>\r\n                Add Activity\r\n            </Button>\r\n        </View>\r\n    )\r\n}","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        console.warn(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <h1>Something went wrong.</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from \"react\";\r\nimport { PieChart } from \"react-native-svg-charts\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { useTheme } from \"react-native-paper\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\nexport function ActivityPie(props) {\r\n    const { activities, totalHoursInWeek } = props;\r\n    const [data, setData] = React.useState([])\r\n    const theme = useTheme();\r\n\r\n    const constructDataFromActivities = (activities) => {\r\n\r\n        let freeHours = totalHoursInWeek;\r\n        const pieData = activities\r\n            .filter((activity) => activity.hours * activity.duration.multiplier > 0)\r\n            .map((activity, index) => {\r\n                const hoursInWeek = activity.hours * activity.duration.multiplier;\r\n                freeHours -= hoursInWeek;\r\n                return {\r\n                    value: hoursInWeek,\r\n                    key: index,\r\n                    svg: {\r\n                        fill: activity.color,\r\n                        onPress: () => console.log('press', activity.name),\r\n                    }\r\n                }\r\n            })\r\n\r\n        pieData.push({\r\n            value: freeHours,\r\n            key: \"free-time\",\r\n            svg: {\r\n                fill: theme.colors.background,\r\n                stroke: theme.colors.placeholder,\r\n                strokeWidth: 2,\r\n                onPress: () => console.log('press', 'free-time'),\r\n            },\r\n            arc: { outerRadius: '100%', innerRadius: '40%', cornerRadius: 10, }\r\n        })\r\n        return pieData\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setData(constructDataFromActivities(activities));\r\n    }, [activities, theme])\r\n\r\n    return (\r\n        <View style={props.style}>\r\n            <ErrorBoundary >\r\n                <PieChart\r\n                    style={styles.pieChart}\r\n                    data={data}\r\n                    sort={(a, b) => (b.key === \"free-time\") ? 1\r\n                        : (a.key === \"free-time\") ? -1\r\n                            : b.value - a.value\r\n                    }\r\n                >\r\n                    {props.children}\r\n                </PieChart>\r\n            </ErrorBoundary>\r\n        </View >\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    pieChart: {\r\n        alignSelf: 'center',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n        aspectRatio: 1,\r\n        width: '100%',\r\n    }\r\n})","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Caption, Headline } from 'react-native-paper';\r\nimport { ActivityPie } from \"./analytics/ActivityPie\";\r\n\r\nexport function HighLevelAssessment(props) {\r\n    const { activities } = props;\r\n\r\n    const totalHoursInWeek = 168;\r\n\r\n    const [hoursRemaining, setHoursRemaining] = React.useState(168);\r\n    const calculateRemainingTime = () => {\r\n        let totalOccupiedHours = 0;\r\n        for (const activity of activities) {\r\n            totalOccupiedHours += activity.hours * activity.duration.multiplier\r\n        }\r\n        setHoursRemaining(totalHoursInWeek - totalOccupiedHours)\r\n    }\r\n\r\n    const getDisplayHours = (hours) => (\r\n        Math.round(10 * hours) / 10\r\n    )\r\n\r\n    React.useEffect(() => {\r\n        calculateRemainingTime();\r\n    }, [activities])\r\n\r\n    return (\r\n        <View style={props.style}>\r\n            <View style={styles.totalFreeHoursText}>\r\n                <Caption>You have</Caption>\r\n                <Headline>{getDisplayHours(hoursRemaining)} / {totalHoursInWeek}</Headline>\r\n                <Caption style={{ textAlign: 'center' }}>free hours in<br />your week</Caption>\r\n            </View>\r\n            <ActivityPie activities={activities} totalHoursInWeek={totalHoursInWeek} style={styles.activityPie} >\r\n            </ActivityPie>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    totalFreeHoursText: {\r\n        position: 'absolute',\r\n        width: '50%',\r\n        height: 'auto',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    activityPie: {\r\n        position: 'absolute',\r\n        width: '90%',\r\n        height: '90%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n})","import { useCallback } from \"react\";\r\nimport { Linking } from \"react-native\";\r\n\r\nexport const openURL = (url) => useCallback(async () => {\r\n    // Checking if the link is supported for links with custom URL scheme.\r\n    const supported = await Linking.canOpenURL(url);\r\n\r\n    if (supported) {\r\n        // Opening the link with some app, if the URL scheme is \"http\" the web link should be opened\r\n        // by some browser in the mobile\r\n        await Linking.openURL(url);\r\n    } else {\r\n        Alert.alert(`Don't know how to open this URL: ${url}`);\r\n    }\r\n}, [url]);\r\n","import { useNavigation } from \"@react-navigation/native\";\r\nimport React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Button, Text, useTheme } from \"react-native-paper\";\r\nimport { openURL } from './utils/UrlUtility';\r\n\r\nexport function Footer(props) {\r\n    const navigation = useNavigation();\r\n    const theme = useTheme();\r\n\r\n    const styles = StyleSheet.create(({\r\n        footer: {\r\n            flexDirection: 'row',\r\n            backgroundColor: theme.colors.surface,\r\n            borderTopWidth: '1px',\r\n            borderColor: theme.colors.disabled,\r\n            color: theme.colors,\r\n            marginTop: '5em',\r\n        },\r\n        copyright: {\r\n            height: 'auto',\r\n            alignSelf: 'center',\r\n            flexGrow: 1,\r\n            marginHorizontal: '1em'\r\n        },\r\n    }))\r\n\r\n    const Copyright = () => {\r\n        return (\r\n            <Text style={styles.copyright}>\r\n                {'© '}\r\n                <Text onPress={openURL(\"https://github.com/avikalpg\")} >\r\n                    Avikalp Gupta\r\n                </Text >{' '}\r\n                {new Date().getFullYear()}\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={styles.footer}>\r\n            <Copyright />\r\n            <Button\r\n                mode=\"text\"\r\n                icon=\"github\"\r\n                onPress={openURL(\"https://github.com/avikalpg/free-time\")}\r\n                color={theme.colors.text}\r\n                uppercase={false}\r\n                compact>\r\n                Contribute\r\n            </Button>\r\n            <Button\r\n                mode='text'\r\n                onPress={() => navigation.navigate('PrivacyPolicy')}\r\n                color={theme.colors.text}\r\n                uppercase={false}\r\n            >\r\n                Privacy Policy\r\n            </Button>\r\n        </View>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { StyleSheet, View, ScrollView } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Paragraph } from 'react-native-paper';\r\nimport { useStylesheet } from 'react-native-responsive-ui';\r\nimport merge from 'deepmerge';\r\nimport ReactGA from 'react-ga4';\r\nimport { ActivityList } from './ActivityList';\r\nimport { HighLevelAssessment } from './HighLevelAssessment';\r\nimport { ActivityPeriods } from './EnumActivityPeriod';\r\nimport { Footer } from './Footer';\r\nimport { randomColor } from './utils/utils';\r\n\r\nfunction Home(props) {\r\n    ReactGA.send(\"pageview\")\r\n    const [activities, setActivities] = useState([\r\n        {\r\n            name: \"Full-time Job\",\r\n            hours: 40,\r\n            duration: ActivityPeriods.WEEK,\r\n            color: randomColor(),\r\n        },\r\n        {\r\n            name: \"Sleep\",\r\n            hours: 8,\r\n            duration: ActivityPeriods.DAY,\r\n            color: randomColor(),\r\n        },\r\n        {\r\n            name: \"Chores\",\r\n            hours: 2,\r\n            duration: ActivityPeriods.DAY,\r\n            color: randomColor(),\r\n        },\r\n        {\r\n            name: \"Leisure\",\r\n            hours: 2,\r\n            duration: ActivityPeriods.WORK_DAY,\r\n            color: randomColor(),\r\n        },\r\n        {\r\n            name: \"Fun & Travel\",\r\n            hours: 8,\r\n            duration: ActivityPeriods.WEEK_END,\r\n            color: randomColor(),\r\n        }\r\n    ]);\r\n    const styles = merge(commonStyles, useStylesheet(responsiveStyles))\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <View style={styles.content}>\r\n                <View style={styles.description}>\r\n                    <Paragraph>Do you know, we have 168 hours in a week. Most full time jobs demand only 40-48 hours of work in a week.\r\n                        This means that we have almost 3-times as much time in our week as we devote to our full-time jobs.\r\n                        How do you spend this time?\r\n                    </Paragraph>\r\n                    <Paragraph>The purpose of this website is gaining self-awareness about the amount of free time you have in your week</Paragraph>\r\n                </View>\r\n                <View style={styles.freeTimeWidget}>\r\n                    <ActivityList activities={activities} setActivities={setActivities} style={styles.activityListStyle} />\r\n                    <HighLevelAssessment activities={activities} style={styles.highLevelAssessmentStyle} />\r\n                </View>\r\n            </View>\r\n            <Footer />\r\n            <StatusBar style=\"auto\" />\r\n        </ScrollView>\r\n    )\r\n\r\n}\r\n\r\nconst responsiveStyles = [\r\n    {\r\n        query: { minWidth: 900 },\r\n        style: {\r\n            freeTimeWidget: {\r\n                flexDirection: 'row',\r\n            },\r\n            activityListStyle: {\r\n                flexDirection: 'column',\r\n                width: '50%',\r\n            },\r\n            highLevelAssessmentStyle: {\r\n                width: '50%',\r\n                height: '100%',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                minHeight: '300px',\r\n            },\r\n            Footer:{\r\n                marginBottom : '0%',\r\n            },\r\n        }\r\n    },\r\n    {\r\n        query: { maxWidth: 900 },\r\n        style: {\r\n            freeTimeWidget: {\r\n                flexDirection: 'column',\r\n                width: '96%',\r\n                alignSelf: 'center',\r\n            },\r\n            activityListStyle: {\r\n                flexDirection: 'column',\r\n                width: '100%',\r\n            },\r\n            highLevelAssessmentStyle: {\r\n                width: '100%',\r\n                height: 'auto',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                minHeight: '300px',\r\n            },\r\n        }\r\n    },\r\n]\r\n\r\nconst commonStyles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    content: {\r\n        flex: 1,\r\n        maxWidth: 1250,\r\n        alignSelf: 'center',\r\n        width: '100%',\r\n    },\r\n    description: {\r\n        width: '80%',\r\n        alignSelf: 'center',\r\n        flexWrap: 'wrap',\r\n        paddingVertical: '2em'\r\n    },\r\n});\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { ScrollView, StyleSheet } from 'react-native';\r\nimport Markdown from 'react-native-markdown-renderer';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport ReactGA from 'react-ga4';\r\n\r\nimport privacyPolicyFile from '../assets/privacy.md';\r\nimport { Text } from 'react-native-paper';\r\nimport { Footer } from './Footer';\r\n\r\nexport default function PrivacyPolicy(props) {\r\n    ReactGA.send('pageview');\r\n    const [privacyPolicyText, setPrivacyPolicyText] = useState(\"placeholder text\");\r\n    const styles = StyleSheet.create({\r\n        privacyPolicyContents: {\r\n            margin: '1em',\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetch(privacyPolicyFile).then(res => res.text()).then(text => {\r\n            setPrivacyPolicyText(text);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <ScrollView>\r\n            <Text style={styles.privacyPolicyContents}>\r\n                <Markdown>{privacyPolicyText}</Markdown>\r\n            </Text>\r\n            <Footer />\r\n            <StatusBar style='auto' />\r\n        </ScrollView>\r\n    )\r\n}","import {\r\n    NavigationContainer,\r\n    DarkTheme as NavigationDarkTheme,\r\n    DefaultTheme as NavigationDefaultTheme\r\n} from '@react-navigation/native';\r\nimport {\r\n    DefaultTheme as PaperDefaultTheme,\r\n    DarkTheme as PaperDarkTheme,\r\n    Provider as PaperProvider,\r\n} from 'react-native-paper';\r\nimport merge from 'deepmerge';\r\n\r\nconst CombinedDefaultTheme = merge(PaperDefaultTheme, NavigationDefaultTheme);\r\nconst CombinedDarkTheme = merge(PaperDarkTheme, NavigationDarkTheme);\r\n\r\nexport const DefaultTheme = {\r\n    ...CombinedDefaultTheme,\r\n    colors: {\r\n        ...CombinedDefaultTheme.colors,\r\n        surface: '#dfdfdf',\r\n        primary: 'tomato',\r\n        accent: 'yellow',\r\n    }\r\n};\r\nexport const DarkTheme = {\r\n    ...CombinedDarkTheme\r\n};","import React from 'react';\r\nimport { PreferencesContext } from './src/PreferencesContext';\r\nimport { Helmet } from 'react-helmet';\r\nimport { NavigationContainer, } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\nimport ReactGA from 'react-ga4';\r\n\r\nimport { Header } from './src/Header';\r\nimport Home from './src/Home';\r\nimport PrivacyPolicy from './src/PrivacyPolicy';\r\nimport { DefaultTheme, DarkTheme } from './src/Theme';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n\tReactGA.initialize(\"G-S9YE72LCW4\");\r\n\tconst [isThemeDark, setIsThemeDark] = React.useState(false);\r\n\tlet theme = isThemeDark ? DarkTheme : DefaultTheme;\r\n\tconst toggleTheme = React.useCallback(() => {\r\n\t\treturn setIsThemeDark(!isThemeDark);\r\n\t}, [isThemeDark]);\r\n\r\n\tconst preferences = React.useMemo(() => ({\r\n\t\ttoggleTheme,\r\n\t\tisThemeDark,\r\n\t}), [toggleTheme, isThemeDark])\r\n\treturn (\r\n\t\t// Context is wired into the local state of our main component, so that its values could be propagated throughout the entire application\r\n\t\t<PreferencesContext.Provider value={preferences}>\r\n\t\t\t<PaperProvider theme={theme}>\r\n\t\t\t\t<NavigationContainer theme={theme}>\r\n\t\t\t\t\t<Helmet>\r\n\t\t\t\t\t\t<script\r\n\t\t\t\t\t\t\tasync\r\n\t\t\t\t\t\t\tsrc=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9543408536781579\"\r\n\t\t\t\t\t\t\tcrossorigin=\"anonymous\"></script>\r\n\t\t\t\t\t</Helmet>\r\n\t\t\t\t\t<Stack.Navigator initialRouteName='Home' screenOptions={{\r\n\t\t\t\t\t\theader: (props) => <Header {...props} />,\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Stack.Screen name='Home' component={Home} options={{ title: \"Free time in a Week\" }} />\r\n\t\t\t\t\t\t<Stack.Screen name='PrivacyPolicy' component={PrivacyPolicy} options={{ title: \"Privacy Policy\" }} />\r\n\t\t\t\t\t</Stack.Navigator>\r\n\t\t\t\t</NavigationContainer>\r\n\t\t\t</PaperProvider>\r\n\t\t</PreferencesContext.Provider>\r\n\t);\r\n}\r\n"],"sourceRoot":""}